#!/usr/bin/env python3
"""
Test pour v√©rifier la logique d'empilement du graphique de transition.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_stacked_logic():
    """Test la logique d'empilement identique aux projections."""
    
    print("=== TEST LOGIQUE D'EMPILEMENT TRANSITION ===")
    
    # Simulation des donn√©es d'une ann√©e
    revenus_annuels = 90000  # ‚Ç¨/an
    donnees_annuelles = {
        'Reste √† vivre': 30000,
        'Imp√¥t sur le revenu': 15000,
        'Pr√©l√®vements Sociaux': 5000,
        'Mensualit√©s Pr√™ts': 20000,
        'Charges Immobili√®res': 8000,
        'Taxes Fonci√®res': 3000,
        'Autres D√©penses': 9000,
        'Co√ªt des √©tudes': 0
    }
    
    print(f"Donn√©es d'exemple (annuelles) :")
    print(f"Revenus du foyer : {revenus_annuels:,}‚Ç¨")
    
    # Conversion en mensuel
    revenus_mensuels = revenus_annuels / 12
    print(f"\nRevenus mensuels : {revenus_mensuels:,.0f}‚Ç¨/mois")
    
    print(f"\nComposantes empil√©es (mensuelles) :")
    total_empile = 0
    for categorie, montant_annuel in donnees_annuelles.items():
        if montant_annuel > 0:
            montant_mensuel = montant_annuel / 12
            total_empile += montant_mensuel
            print(f"  {categorie:<25} : {montant_mensuel:>8.0f}‚Ç¨/mois")
    
    print(f"  {'‚îÄ' * 35}")
    print(f"  {'Total empil√©':<25} : {total_empile:>8.0f}‚Ç¨/mois")
    
    # V√©rification
    difference = abs(revenus_mensuels - total_empile)
    print(f"\n=== V√âRIFICATION ===")
    print(f"Revenus mensuels    : {revenus_mensuels:,.0f}‚Ç¨")
    print(f"Total empil√©        : {total_empile:,.0f}‚Ç¨")
    print(f"Diff√©rence          : {difference:,.0f}‚Ç¨")
    
    if difference < 1:  # Tol√©rance d'1‚Ç¨ pour les arrondis
        print("‚úÖ COH√âRENT : La hauteur totale des barres empil√©es = revenus mensuels")
    else:
        print("‚ùå INCOH√âRENT : Diff√©rence significative d√©tect√©e")
    
    print(f"\n=== COMPORTEMENT VISUEL ===")
    print("üìä Graphique en barres empil√©es :")
    print("   - Chaque segment = un poste de d√©pense")
    print("   - Hauteur totale = revenus du mois")
    print("   - Ligne horizontale en pointill√©s = r√©f√©rence revenus")
    print("   - M√™me logique que les graphiques de projection")

if __name__ == "__main__":
    test_stacked_logic()
