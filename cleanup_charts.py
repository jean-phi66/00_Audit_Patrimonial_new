#!/usr/bin/env python3
"""
Script de nettoyage pour supprimer tous les fichiers de test et de d√©monstration.
"""

import os
import shutil
import glob

def cleanup():
    """Nettoie tous les fichiers g√©n√©r√©s par les tests et d√©monstrations."""
    print("üßπ Nettoyage des fichiers de test et d√©monstration...")
    
    # Dossiers √† supprimer
    folders_to_remove = [
        'charts_output',
        'test_png', 
        'demo_complete',
        'demo_png',
        'demo_html'
    ]
    
    # Fichiers √† supprimer
    files_to_remove = [
        'demo_data.json',
        'example_data.json'  # Optionnel: garder pour les futurs tests
    ]
    
    removed_count = 0
    
    # Supprimer les dossiers
    for folder in folders_to_remove:
        if os.path.exists(folder):
            shutil.rmtree(folder)
            print(f"‚úÖ Dossier supprim√©: {folder}/")
            removed_count += 1
        else:
            print(f"‚ÑπÔ∏è  Dossier inexistant: {folder}/")
    
    # Supprimer les fichiers (sauf example_data.json qui peut servir)
    files_to_remove_filtered = [f for f in files_to_remove if f != 'example_data.json']
    
    for file in files_to_remove_filtered:
        if os.path.exists(file):
            os.remove(file)
            print(f"‚úÖ Fichier supprim√©: {file}")
            removed_count += 1
        else:
            print(f"‚ÑπÔ∏è  Fichier inexistant: {file}")
    
    if removed_count == 0:
        print("‚ú® Aucun fichier √† nettoyer - workspace d√©j√† propre !")
    else:
        print(f"üéâ Nettoyage termin√© - {removed_count} √©l√©ments supprim√©s")
        print("üìñ Le fichier example_data.json a √©t√© conserv√© pour les futurs tests")

if __name__ == "__main__":
    cleanup()